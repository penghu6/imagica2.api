name: Deploy to Production

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  ALIYUN_REGISTRY: registry.cn-hangzhou.aliyuncs.com
  ALIYUN_IMAGE_NAME: seolove/imagica2

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_IMAGE_NAME }}
          tags: |
            type=raw,value=develop
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Debug Image Push
        if: always()
        run: |
          echo "Registry: ${{ env.ALIYUN_REGISTRY }}"
          echo "Image Name: ${{ env.ALIYUN_IMAGE_NAME }}"
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Generated Tags: ${{ steps.meta.outputs.tags }}"
          docker images

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/data/050819521/webroot/imagica2"

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 创建必要的目录并设置权限
            sudo mkdir -p /data/050819521/file/imagica2/bucket/temp
            sudo mkdir -p /data/050819521/file/imagica2/storage
            sudo chown -R 1000:1000 /data/050819521/file/imagica2/bucket
            sudo chown -R 1000:1000 /data/050819521/file/imagica2/storage
            sudo chmod -R 755 /data/050819521/file/imagica2/bucket
            sudo chmod -R 755 /data/050819521/file/imagica2/storage
            
            cd /data/050819521/webroot/imagica2
            echo "${{ secrets.ALIYUN_PASSWORD }}" | docker login --username ${{ secrets.ALIYUN_USERNAME }} --password-stdin ${{ env.ALIYUN_REGISTRY }}
            docker-compose down
            docker-compose pull
            docker-compose up -d
