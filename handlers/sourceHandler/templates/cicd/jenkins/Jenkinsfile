pipeline {
    agent any
    
    environment {
        NODE_VERSION = '${nodeVersion}'
        DOCKER_IMAGE = '${dockerImage}'
        DEPLOY_ENV = '${deployEnv}'
    }
    
    stages {
        stage('Prepare') {
            steps {
                nodejs(nodeJSInstallationName: "NodeJS ${NODE_VERSION}") {
                    sh 'npm install'
                }
            }
        }
        
        stage('Build') {
            steps {
                nodejs(nodeJSInstallationName: "NodeJS ${NODE_VERSION}") {
                    sh 'npm run build'
                }
            }
        }
        
        stage('Docker Build') {
            steps {
                sh 'docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} .'
            }
        }
        
        stage('Deploy') {
            steps {
                sh '''
                    docker stop ${DEPLOY_ENV} || true
                    docker rm ${DEPLOY_ENV} || true
                    docker run -d --name ${DEPLOY_ENV} -p ${PORT}:80 ${DOCKER_IMAGE}:${BUILD_NUMBER}
                '''
            }
        }
    }
    
    post {
        success {
            httpRequest url: '${callbackUrl}/deploy/success', 
                       contentType: 'APPLICATION_JSON',
                       httpMode: 'POST',
                       requestBody: "{\"deployId\": \"${BUILD_NUMBER}\"}"
        }
        failure {
            httpRequest url: '${callbackUrl}/deploy/failure',
                       contentType: 'APPLICATION_JSON',
                       httpMode: 'POST',
                       requestBody: "{\"deployId\": \"${BUILD_NUMBER}\"}"
        }
    }
}
